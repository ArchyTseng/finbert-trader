# ========================= Project Metadata ===========================

[project]
name = "finbert_trader"
version = "0.1.0"
description = "Starter Pixi project template"
authors = [{name = "Shicheng Zeng", email = "archyz.studio@gmail.com"}]
requires-python = ">=3.11"
dependencies = ["yfinance==0.2.65", "stable-baselines3>=2.6.0,<3", "logging>=0.4.9.6,<0.5"]

# ========================= Pixi Config ================================

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64"]    

[tool.pixi.dependencies]
python-dotenv = "*"
numpy = "*"
pandas = "*"
scipy = "*"
scikit-learn = "*"
matplotlib = "*"
seaborn = "*"
requests = "*"
typer = "*"         # CLI 工具
ipykernel = "*"     # 支持 Jupyter Kernel 运行

# 日志与可视化
tensorboard = "*"
wandb = "*"

# 系统兼容
tqdm = "*"

polygon-api-client = ">=1.12.8,<2"
alpha_vantage = ">=3.0.0,<4"
websockets = ">=13.0,<16"
transformers = ">=4.53.2,<5"
ta-lib = ">=0.5.1,<0.6"
datasets = ">=3.6.0,<4"
# yfinance = "0.2.65"
# curl-cffi = ">=0.7"

[tool.pixi.pypi-dependencies]
finbert_trader = { path = ".", editable = true }
torch = ">=2.2.0,<3"

# ========================= Build System ==============================

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

# ========================= Features ===================================
[tool.pixi.feature.nlp.dependencies]
huggingface-hub = "*"
transformers = "*"
finbert-embedding = "*"
datasets = "*"

[tool.pixi.feature.rlgym.dependencies]
gym = "*"
stable-baselines3 = "*"

[tool.pixi.feature.finance.dependencies]
ta-lib = "*"
pytz = "*"
backtrader = "*"

[tool.pixi.feature.edge-deploy.dependencies]
coremltools = "*"
onnx = "*"
onnxruntime = "*"

[tool.pixi.feature.notebooks.dependencies]
jupyterlab = "*"

[tool.pixi.feature.code-quality.dependencies]
ruff = "*"
pylint = "*"
black = "*"
isort = "*"

[tool.pixi.feature.testing.dependencies]
pytest = "*"
pytest-cov = "*"

# ========================= Environments ===============================

[tool.pixi.environments]
dev = ["notebooks", "code-quality", "testing"]

# ========================= Tasks ======================================

[tool.pixi.tasks]
start = "python src/__PROJECT_NAME__/main.py"
test = "pytest --cov=src"
format = "ruff format src/"

[tool.pixi.feature.notebooks.tasks]
lab = "jupyter lab"

[tool.pixi.feature.code-quality.tasks]
lint = "pylint src/"
sort = "isort src/"
